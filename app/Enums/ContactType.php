<?php

namespace App\Enums;

enum ContactType: string
{
    case Phone          = 'phone';
    case Email          = 'email';
    case Address        = 'address';
    case Telegram       = 'telegram';
    public function getName(): string
    {
        return match ($this) {
            self::Phone         => 'Телефон',
            self::Email         => 'Email',
            self::Address       => 'Адрес',
            self::Telegram      => 'Телеграм',
        };
    }

    public function getIco(): string
    {
        return match ($this) {
            self::Phone         => '
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 24 24" fill="none">
                    <path d="M3.77762 11.9424C2.8296 10.2893 2.37185 8.93948 2.09584 7.57121C1.68762 5.54758 2.62181 3.57081 4.16938 2.30947C4.82345 1.77638 5.57323 1.95852 5.96 2.6524L6.83318 4.21891C7.52529 5.46057 7.87134 6.08139 7.8027 6.73959C7.73407 7.39779 7.26737 7.93386 6.33397 9.00601L3.77762 11.9424ZM3.77762 11.9424C5.69651 15.2883 8.70784 18.3013 12.0576 20.2224M12.0576 20.2224C13.7107 21.1704 15.0605 21.6282 16.4288 21.9042C18.4524 22.3124 20.4292 21.3782 21.6905 19.8306C22.2236 19.1766 22.0415 18.4268 21.3476 18.04L19.7811 17.1668C18.5394 16.4747 17.9186 16.1287 17.2604 16.1973C16.6022 16.2659 16.0661 16.7326 14.994 17.666L12.0576 20.2224Z" stroke="inherit" stroke-width="1.5" stroke-linejoin="round"/>
                    </svg>
                    ',
            self::Email         => '
                <svg width="20" viewBox="0 0 15 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1 2.42839C1 2.04955 1.15049 1.68624 1.41836 1.41836C1.68624 1.15049 2.04955 1 2.42839 1H12.4271C12.8059 1 13.1692 1.15049 13.4371 1.41836C13.705 1.68624 13.8555 2.04955 13.8555 2.42839V9.57031C13.8555 9.94914 13.705 10.3125 13.4371 10.5803C13.1692 10.8482 12.8059 10.9987 12.4271 10.9987H2.42839C2.04955 10.9987 1.68624 10.8482 1.41836 10.5803C1.15049 10.3125 1 9.94914 1 9.57031V2.42839Z" stroke="inherit" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M1 2.42773L7.42773 6.71289L13.8555 2.42773" stroke="inherit" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            ',
            self::Address       => '
                <svg width="20" viewBox="0 0 14 12" fill="inherit" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2.21535 2.06007L2.45194 2.50055L2.21535 2.06007ZM2.95207 1.66436L2.71547 1.22387L2.71547 1.22387L2.95207 1.66436ZM8.30289 2.484L8.512 2.02982L8.51199 2.02982L8.30289 2.484ZM6.30392 1.56368L6.51303 1.10951V1.10951L6.30392 1.56368ZM6.01456 9.71759L6.22366 9.26342H6.22366L6.01456 9.71759ZM8.30289 10.7711L8.09379 11.2253H8.09379L8.30289 10.7711ZM3.23192 9.80117L3.46852 10.2416H3.46852L3.23192 9.80117ZM1.7452 10.3763L1.82672 9.88296H1.82671L1.7452 10.3763ZM1.20536 10.0788L0.828227 10.4071L0.828229 10.4071L1.20536 10.0788ZM4.90292 9.30193L4.96565 8.80588L4.96565 8.80588L4.90292 9.30193ZM1.16299 2.80268L0.737136 2.54067L0.737136 2.54067L1.16299 2.80268ZM5.5 1C5.5 0.723858 5.27614 0.5 5 0.5C4.72386 0.5 4.5 0.723858 4.5 1L5.5 1ZM4.5 9C4.5 9.27614 4.72386 9.5 5 9.5C5.27614 9.5 5.5 9.27614 5.5 9H4.5ZM9.5 3C9.5 2.72386 9.27614 2.5 9 2.5C8.72386 2.5 8.5 2.72386 8.5 3H9.5ZM8.5 11C8.5 11.2761 8.72386 11.5 9 11.5C9.27614 11.5 9.5 11.2761 9.5 11H8.5ZM2.45194 2.50055L3.18866 2.10484L2.71547 1.22387L1.97875 1.61959L2.45194 2.50055ZM1.5 8.57128V4.03538H0.5V8.57128H1.5ZM8.51199 2.02982L6.51303 1.10951L6.09482 2.01786L8.09379 2.93818L8.51199 2.02982ZM5.80546 10.1718L8.09379 11.2253L8.512 10.317L6.22366 9.26342L5.80546 10.1718ZM10.6 2.21287H9.35281V3.21287H10.6V2.21287ZM9.35281 11.5H10.6V10.5H9.35281V11.5ZM13.5 8.72871V4.98415H12.5V8.72871H13.5ZM10.6 11.5C11.1523 11.5 11.6141 11.501 11.9798 11.4544C12.3572 11.4064 12.7072 11.3002 12.9922 11.0305L12.3048 10.3042C12.2383 10.3672 12.1298 10.4273 11.8536 10.4624C11.5658 10.499 11.1791 10.5 10.6 10.5V11.5ZM12.5 8.72871C12.5 9.27897 12.4988 9.63856 12.461 9.9045C12.4257 10.1531 12.3675 10.245 12.3048 10.3042L12.9922 11.0305C13.2811 10.7572 13.3985 10.4151 13.4511 10.0451C13.5012 9.69258 13.5 9.24915 13.5 8.72871H12.5ZM10.6 3.21287C11.1791 3.21287 11.5658 3.21382 11.8536 3.25045C12.1298 3.28559 12.2383 3.34571 12.3048 3.40865L12.9922 2.68233C12.7072 2.41265 12.3572 2.30646 11.9798 2.25844C11.6141 2.21191 11.1523 2.21287 10.6 2.21287V3.21287ZM13.5 4.98415C13.5 4.46372 13.5012 4.02029 13.4511 3.66772C13.3985 3.29781 13.2811 2.9557 12.9922 2.68233L12.3048 3.40865C12.3675 3.46791 12.4257 3.55977 12.461 3.80837C12.4988 4.07431 12.5 4.43389 12.5 4.98415H13.5ZM2.99533 9.36069C2.59661 9.57485 2.32967 9.7176 2.12289 9.80403C1.91504 9.89092 1.84507 9.88599 1.82672 9.88296L1.66369 10.8696C1.96349 10.9191 2.24736 10.8359 2.50858 10.7267C2.77086 10.617 3.0882 10.4459 3.46852 10.2416L2.99533 9.36069ZM0.5 8.57128C0.5 8.98366 0.499325 9.33321 0.528472 9.60733C0.557608 9.88135 0.623643 10.1721 0.828227 10.4071L1.58249 9.7505C1.58171 9.74961 1.54507 9.71043 1.52287 9.5016C1.50067 9.29288 1.5 9.00663 1.5 8.57128H0.5ZM1.82671 9.88296C1.72587 9.86629 1.64025 9.81685 1.58249 9.7505L0.828229 10.4071C1.04376 10.6547 1.34112 10.8163 1.66369 10.8696L1.82671 9.88296ZM6.22366 9.26342C5.70332 9.02386 5.34783 8.85421 4.96565 8.80588L4.84019 9.79798C5.03376 9.82246 5.22744 9.90565 5.80546 10.1718L6.22366 9.26342ZM3.18866 2.10484C4.03937 1.6479 4.32315 1.50941 4.62244 1.50043L4.59242 0.500877C4.00257 0.518592 3.47916 0.813676 2.71547 1.22387L3.18866 2.10484ZM6.51303 1.10951C5.72331 0.745924 5.18186 0.483173 4.59242 0.500877L4.62244 1.50043C4.92213 1.49142 5.2153 1.61293 6.09482 2.01786L6.51303 1.10951ZM1.97875 1.61959C1.69078 1.77427 1.44336 1.90655 1.25003 2.03581C1.0484 2.17063 0.870166 2.32445 0.737136 2.54067L1.58884 3.06469C1.61879 3.01601 1.67028 2.95776 1.80586 2.86711C1.94973 2.77092 2.147 2.66434 2.45194 2.50055L1.97875 1.61959ZM1.5 4.03538C1.5 3.70244 1.50063 3.49093 1.51765 3.32853C1.53338 3.1784 1.55984 3.11183 1.58884 3.06469L0.737136 2.54067C0.603148 2.75844 0.54811 2.98562 0.523096 3.22431C0.499368 3.45073 0.5 3.72312 0.5 4.03538H1.5ZM8.09379 2.93818C8.32278 3.04361 8.50357 3.12948 8.70056 3.17242C8.89697 3.21523 9.09811 3.21287 9.35281 3.21287V2.21287C9.05709 2.21287 8.98075 2.21001 8.91354 2.19536C8.84692 2.18084 8.77797 2.15228 8.512 2.02982L8.09379 2.93818ZM8.09379 11.2253C8.32278 11.3307 8.50357 11.4166 8.70056 11.4595C8.89697 11.5024 9.09811 11.5 9.35281 11.5V10.5C9.05709 10.5 8.98075 10.4971 8.91354 10.4825C8.84692 10.468 8.77797 10.4394 8.51199 10.317L8.09379 11.2253ZM3.46852 10.2416C4.03422 9.9378 4.39528 9.74172 4.84019 9.79798L4.96565 8.80588C4.14485 8.70209 3.48765 9.09625 2.99533 9.36069L3.46852 10.2416ZM4.5 1L4.5 9H5.5L5.5 1L4.5 1ZM8.5 3V11H9.5V3H8.5Z" fill="inherit"/>
                </svg>
            ',
            self::Telegram      => '<i class="fab fa-telegram-plane"></i>',
        };
    }

    public function getPreLink(): string
    {
        return match ($this) {
            self::Phone         => "phone:",
            self::Email         => "mailto:",
            default             => '',
        };
    }
    public function getInputType(): string
    {
        return match ($this) {
            self::Phone         => "tel",
            self::Email         => "email",
            self::Telegram      => "url",
            default             => '',
        };
    }

    public static function getSortedCasesByName()
    {

        $result = [];
        foreach (self::cases() as $case)
            $result[$case->name] = $case->getName();

        sort($result);

        return collect($result);

    }
}
